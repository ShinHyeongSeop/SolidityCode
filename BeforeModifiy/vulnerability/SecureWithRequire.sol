pragma solidity ^0.6.5;

contract ArithmeticCanPreventRequire {
	mapping (address => uint256) public balanceOf;
	function transfer(address _to, uint256 _value) public {
		/* Check if sender has balance and for overflows */
		require(balanceOf[msg.sender] >= _value && balanceOf[_to] + _value >= balanceOf[_to]);

		/* Add and subtract new balances */
		balanceOf[msg.sender] -= _value;
    	balanceOf[_to] += _value;
	}
}
